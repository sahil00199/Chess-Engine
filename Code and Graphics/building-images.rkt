#lang racket
(require racket/draw)
(require racket/gui)

(provide image-list initial-vector variable-position prev-pos plain-list)

(define image-list
  (list (list (make-object bitmap% "white.png")
              (make-object bitmap% "black.png")
              (make-object bitmap% "green.png")
              (make-object bitmap% "yellow.png"))
        (list (make-object bitmap% "1-white.png")
              (make-object bitmap% "1-black.png")
              (make-object bitmap% "1-green.png")
              (make-object bitmap% "1-yellow.png"))
        (list (make-object bitmap% "2-white.png")
              (make-object bitmap% "2-black.png")
              (make-object bitmap% "2-green.png")
              (make-object bitmap% "2-yellow.png"))
        (list (make-object bitmap% "3-white.png")
              (make-object bitmap% "3-black.png")
              (make-object bitmap% "3-green.png")
              (make-object bitmap% "3-yellow.png"))
        (list (make-object bitmap% "4-white.png")
              (make-object bitmap% "4-black.png")
              (make-object bitmap% "4-green.png")
              (make-object bitmap% "4-yellow.png"))
        (list (make-object bitmap% "5-white.png")
              (make-object bitmap% "5-black.png")
              (make-object bitmap% "5-green.png")
              (make-object bitmap% "5-yellow.png"))
        (list (make-object bitmap% "6-white.png")
              (make-object bitmap% "6-black.png")
              (make-object bitmap% "6-green.png")
              (make-object bitmap% "6-red.png")
              (make-object bitmap% "6-yellow.png"))
        (list (make-object bitmap% "7-white.png")
              (make-object bitmap% "7-black.png")
              (make-object bitmap% "7-green.png")
              (make-object bitmap% "7-yellow.png"))
        (list (make-object bitmap% "8-white.png")
              (make-object bitmap% "8-black.png")
              (make-object bitmap% "8-green.png")
              (make-object bitmap% "8-yellow.png"))
        (list (make-object bitmap% "9-white.png")
              (make-object bitmap% "9-black.png")
              (make-object bitmap% "9-green.png")
              (make-object bitmap% "9-yellow.png"))
        (list (make-object bitmap% "10-white.png")
              (make-object bitmap% "10-black.png")
              (make-object bitmap% "10-green.png")
              (make-object bitmap% "10-yellow.png"))
        (list (make-object bitmap% "11-white.png")
              (make-object bitmap% "11-black.png")
              (make-object bitmap% "11-green.png")
              (make-object bitmap% "11-yellow.png"))
        (list (make-object bitmap% "12-white.png")
              (make-object bitmap% "12-black.png")
              (make-object bitmap% "12-green.png")
              (make-object bitmap% "12-red.png")
              (make-object bitmap% "12-yellow.png"))))

(define plain-list (list (make-object bitmap% "1.png")
                         (make-object bitmap% "2.png")
                         (make-object bitmap% "3.png")
                         (make-object bitmap% "4.png")
                         (make-object bitmap% "5.png")
                         (make-object bitmap% "6.png")
                         (make-object bitmap% "7.png")
                         (make-object bitmap% "8.png")
                         (make-object bitmap% "9.png")
                         (make-object bitmap% "10.png")
                         (make-object bitmap% "11.png")
                         (make-object bitmap% "12.png")))
                         

;(define initial-vector
;  (vector (vector 0 0 0 0 0 0 8 12)
;          (vector 0 0 0 0 0 0 7 0)
;          (vector 0 0 0 2 0 0 0 7)
;          (make-vector 8 0)
;;          (vector 0 0 0 0 0 8 0 0)
;;          (make-vector 8 0)
;;          (vector 0 0 0 1 1 1 0 0 )
;;          (vector 0 0 0 4 6 4 0 0)))

;(define initial-vector
;  #(#(10 0 0 0 12 9 8 10) #(7 7 7 9 7 7 7 7) #(8 0 0 0 0 8 0 0) #(0 0 0 0 0 0 0 0) #(0 0 0 2 0 0 11 0) #(0 1 0 1 0 2 0 0) #(1 3 1 5 0 1 1 1) #(4 0 0 0 6 3 0 4)))

;(define initial-vector
;  (vector (vector 0 0 0 0 12 0 0 0)
;        (make-vector 8 0)
;        (make-vector 8 0)
;        (make-vector 8 0)
;        (make-vector 8 0)
;        (make-vector 8 0)
;        (make-vector 8 1)
;        (vector 4 2 3 5 6 3 2 4)))

;(define initial-vector
;  (vector (vector 0 0 0 0 0 10  0 0)
;        (vector 0 0 0 0 0 0 4 4)
;        (vector 10 0 0 0 12 0 0 0)
;        (vector 7 7 7 0 1 0 0 0)
;        (vector 0 0 0 6 0 0 0 0)
;        (make-vector 8 0)
;        (make-vector 8 0)
;        (make-vector 8 0)))

;(define initial-vector
;  (vector (vector 0 0 0 0 12 0 0 10)
;        (vector 1 4 0 0 0 0 7 7)
;        (make-vector 8 0)
;        (make-vector 8 0)
;        (make-vector 8 0)
;        (make-vector 8 0)
;        (make-vector 8 0)
;        (vector 4 2 3 5 6 3 2 4)))


(define initial-vector
  (vector (vector 10 8 9 11 12 9 8 10)
        (make-vector 8 7)
        (make-vector 8 0)
        (make-vector 8 0)
        (make-vector 8 0)
        (make-vector 8 0)
        (make-vector 8 1)
        (vector 4 2 3 5 6 3 2 4)))

(define prev-pos
(vector (vector 10 8 9 11 12 9 8 10)
        (make-vector 8 7)
        (make-vector 8 0)
        (make-vector 8 0)
        (make-vector 8 0)
        (make-vector 8 0)
        (make-vector 8 1)
        (vector 4 2 3 5 6 3 2 4)))

(define variable-position (vector (make-vector 8 0)
                                  (make-vector 8 0)
                                  (make-vector 8 0)
                                  (make-vector 8 0)
                                  (make-vector 8 0)
                                  (make-vector 8 0)
                                  (make-vector 8 0)
                                  (make-vector 8 0)))

;(define initial-vector
;  (vector (vector 10 0 9 11 0 10 12 0)
;          (vector 7 7 7 0 0 7 7 7 )
;          (vector 0 0 8 7 0 8 0 0 )
;          (vector 0 0 9 0 7 0 0 0 )
;          (vector 0 0 3 0 1 0 0 0)
;          (vector 0 0 0 1 0 2 0 0)
;          (vector 1 1 1 0 0 1 1 1)
;          (vector 4 2 3 5 4 0 6 0)))

